plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.talkar.app'
    compileSdk 34

    defaultConfig {
        applicationId "com.talkar.app"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // NOTE: API_* BuildConfig fields are set per-buildType below.
        // They are intentionally omitted here to force explicit per-variant values.
    }

    // Allow overriding API host/protocol via project properties (e.g., -PAPI_HOST=... or in gradle.properties)
    def apiProtocolDebug = project.hasProperty('API_PROTOCOL') ? project.API_PROTOCOL : 'http'
    def apiHostDebug = project.hasProperty('API_HOST') ? project.API_HOST : '10.17.5.127'
    // Ports should be integers for buildConfigField "int"
    def apiPortDebug = project.hasProperty('API_PORT') ? project.API_PORT.toInteger() : 3000
    def apiVersion = project.hasProperty('API_VERSION') ? project.API_VERSION : 'v1'

    // Release (production) defaults should use HTTPS and a production host. CI or local overrides can set API_HOST_RELEASE etc.
    def apiProtocolRelease = project.hasProperty('API_PROTOCOL_RELEASE') ? project.API_PROTOCOL_RELEASE : 'https'
    def apiHostRelease = project.hasProperty('API_HOST_RELEASE') ? project.API_HOST_RELEASE : 'api.talkar.app'
    def apiPortRelease = project.hasProperty('API_PORT_RELEASE') ? project.API_PORT_RELEASE.toInteger() : 443

    buildTypes {
        debug {
            // Debug uses local/dev defaults but can be overridden via -P or gradle.properties
            buildConfigField "String", "API_PROTOCOL", "\"${apiProtocolDebug}\""
            buildConfigField "String", "API_HOST", "\"${apiHostDebug}\""
            buildConfigField "int", "API_PORT", "${apiPortDebug}"
            buildConfigField "String", "API_VERSION", "\"${apiVersion}\""
        }

        release {
            // Production defaults use HTTPS and production host; allow CI overrides
            buildConfigField "String", "API_PROTOCOL", "\"${apiProtocolRelease}\""
            buildConfigField "String", "API_HOST", "\"${apiHostRelease}\""
            buildConfigField "int", "API_PORT", "${apiPortRelease}"
            buildConfigField "String", "API_VERSION", "\"${apiVersion}\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        compose true
        buildConfig true
    }
    
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    
    // ARCore (modern approach without Sceneform)
    implementation 'com.google.ar:core:1.41.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    
    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Image loading
    implementation 'io.coil-kt:coil-compose:2.5.0'
    
    // Permissions
    implementation 'com.google.accompanist:accompanist-permissions:0.32.0'
    
    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Room database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    ksp 'androidx.room:room-compiler:2.6.1'
    
    // Gson for TypeConverters
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // ML Kit for image recognition
    implementation 'com.google.mlkit:image-labeling:17.0.7'
    implementation 'com.google.mlkit:object-detection:17.0.1'
    implementation 'com.google.mlkit:vision-common:17.3.0'
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.10.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

